[ {
  "extension" : "revapi.java",
  "id" : "java",
  "configuration" : {
    "missing-classes" : {
      "behavior" : "report",
      "ignoreMissingAnnotations" : false
    }
  }
}, {
  "extension" : "revapi.filter",
  "configuration" : {
    "elements" : {
      "include" : [ {
        "matcher" : "java-package",
        "match" : "/io\\.smallrye\\.stork\\.test(\\..*)?/"
      } ]
    }
  }
}, {
  "extension" : "revapi.differences",
  "id" : "breaking-changes",
  "configuration" : {
    "criticality" : "highlight",
    "minSeverity" : "POTENTIALLY_BREAKING",
    "minCriticality" : "documented",
    "differences" : [
      {
        "ignore": true,
        "code": "java.method.numberOfParametersChanged",
        "old": "method void io.smallrye.stork.test.TestServiceDiscovery::<init>(io.smallrye.stork.test.TestServiceDiscovery1ProviderConfiguration, java.lang.String, boolean)",
        "new": "method void io.smallrye.stork.test.TestServiceDiscovery::<init>(io.smallrye.stork.test.TestServiceDiscovery1ProviderConfiguration, java.lang.String)",
        "justification": "Removal of the 'secure' parameter. Instead the 'secure' attribute of the service discovery should be used. Should not impact users."
      },
      {
        "ignore": true,
        "code": "java.method.parameterTypeChanged",
        "old": "parameter void io.smallrye.stork.test.TestLoadBalancer1::<init>(===io.smallrye.stork.test.TestLoadBalancer1ProviderConfiguration===, io.smallrye.stork.api.ServiceDiscovery, java.lang.String)",
        "new": "parameter void io.smallrye.stork.test.TestLoadBalancer1::<init>(===io.smallrye.stork.test.TestLb1Configuration===, io.smallrye.stork.api.ServiceDiscovery, java.lang.String)",
        "parameterIndex": "0",
        "justification": "Rename the generated configuration file to be <type>Configuration"
      },
      {
        "ignore": true,
        "code": "java.method.returnTypeChanged",
        "old": "method io.smallrye.stork.test.TestLoadBalancer1ProviderConfiguration io.smallrye.stork.test.TestLoadBalancer1::getConfig()",
        "new": "method io.smallrye.stork.test.TestLb1Configuration io.smallrye.stork.test.TestLoadBalancer1::getConfig()",
        "justification": "Rename the generated configuration file to be <type>Configuration"
      },
      {
        "ignore": true,
        "code": "java.method.parameterTypeChanged",
        "old": "parameter io.smallrye.stork.api.LoadBalancer io.smallrye.stork.test.TestLoadBalancer1Provider::createLoadBalancer(===io.smallrye.stork.test.TestLoadBalancer1ProviderConfiguration===, io.smallrye.stork.api.ServiceDiscovery)",
        "new": "parameter io.smallrye.stork.api.LoadBalancer io.smallrye.stork.test.TestLoadBalancer1Provider::createLoadBalancer(===io.smallrye.stork.test.TestLb1Configuration===, io.smallrye.stork.api.ServiceDiscovery)",
        "parameterIndex": "0",
        "justification": "Rename the generated configuration file to be <type>Configuration"
      },
      {
        "ignore": true,
        "code": "java.class.noLongerImplementsInterface",
        "old": "class io.smallrye.stork.test.TestLoadBalancer1Provider",
        "new": "class io.smallrye.stork.test.TestLoadBalancer1Provider",
        "interface": "io.smallrye.stork.spi.LoadBalancerProvider<io.smallrye.stork.test.TestLoadBalancer1ProviderConfiguration>",
        "justification": "Rename the generated configuration file to be <type>Configuration"
      },
      {
        "ignore": true,
        "code": "java.class.superTypeTypeParametersChanged",
        "old": "class io.smallrye.stork.test.TestLoadBalancer1Provider",
        "new": "class io.smallrye.stork.test.TestLoadBalancer1Provider",
        "oldSuperType": "io.smallrye.stork.spi.LoadBalancerProvider<io.smallrye.stork.test.TestLoadBalancer1ProviderConfiguration>",
        "newSuperType": "io.smallrye.stork.spi.LoadBalancerProvider<io.smallrye.stork.test.TestLb1Configuration>",
        "justification": "Rename the generated configuration file to be <type>Configuration"
      },
      {
        "ignore": true,
        "code": "java.class.removed",
        "old": "class io.smallrye.stork.test.TestLoadBalancer1ProviderConfiguration",
        "justification": "Rename the generated configuration file to be <type>Configuration"
      },
      {
        "ignore": true,
        "code": "java.method.parameterTypeChanged",
        "old": "parameter void io.smallrye.stork.test.TestLoadBalancer2::<init>(===io.smallrye.stork.test.TestLoadBalancer2ProviderConfiguration===, io.smallrye.stork.api.ServiceDiscovery, java.lang.String)",
        "new": "parameter void io.smallrye.stork.test.TestLoadBalancer2::<init>(===io.smallrye.stork.test.TestLb2Configuration===, io.smallrye.stork.api.ServiceDiscovery, java.lang.String)",
        "parameterIndex": "0",
        "justification": "Rename the generated configuration file to be <type>Configuration"
      },
      {
        "ignore": true,
        "code": "java.method.returnTypeChanged",
        "old": "method io.smallrye.stork.test.TestLoadBalancer2ProviderConfiguration io.smallrye.stork.test.TestLoadBalancer2::getConfig()",
        "new": "method io.smallrye.stork.test.TestLb2Configuration io.smallrye.stork.test.TestLoadBalancer2::getConfig()",
        "justification": "Rename the generated configuration file to be <type>Configuration"
      },
      {
        "ignore": true,
        "code": "java.method.parameterTypeChanged",
        "old": "parameter io.smallrye.stork.api.LoadBalancer io.smallrye.stork.test.TestLoadBalancer2Provider::createLoadBalancer(===io.smallrye.stork.test.TestLoadBalancer2ProviderConfiguration===, io.smallrye.stork.api.ServiceDiscovery)",
        "new": "parameter io.smallrye.stork.api.LoadBalancer io.smallrye.stork.test.TestLoadBalancer2Provider::createLoadBalancer(===io.smallrye.stork.test.TestLb2Configuration===, io.smallrye.stork.api.ServiceDiscovery)",
        "parameterIndex": "0",
        "justification": "Rename the generated configuration file to be <type>Configuration"
      },
      {
        "ignore": true,
        "code": "java.class.noLongerImplementsInterface",
        "old": "class io.smallrye.stork.test.TestLoadBalancer2Provider",
        "new": "class io.smallrye.stork.test.TestLoadBalancer2Provider",
        "interface": "io.smallrye.stork.spi.LoadBalancerProvider<io.smallrye.stork.test.TestLoadBalancer2ProviderConfiguration>",
        "justification": "Rename the generated configuration file to be <type>Configuration"
      },
      {
        "ignore": true,
        "code": "java.class.superTypeTypeParametersChanged",
        "old": "class io.smallrye.stork.test.TestLoadBalancer2Provider",
        "new": "class io.smallrye.stork.test.TestLoadBalancer2Provider",
        "oldSuperType": "io.smallrye.stork.spi.LoadBalancerProvider<io.smallrye.stork.test.TestLoadBalancer2ProviderConfiguration>",
        "newSuperType": "io.smallrye.stork.spi.LoadBalancerProvider<io.smallrye.stork.test.TestLb2Configuration>",
        "justification": "Rename the generated configuration file to be <type>Configuration"
      },
      {
        "ignore": true,
        "code": "java.class.removed",
        "old": "class io.smallrye.stork.test.TestLoadBalancer2ProviderConfiguration",
        "justification": "Rename the generated configuration file to be <type>Configuration"
      },
      {
        "ignore": true,
        "code": "java.method.numberOfParametersChanged",
        "old": "method void io.smallrye.stork.test.TestServiceDiscovery::<init>(io.smallrye.stork.test.TestServiceDiscovery1ProviderConfiguration, java.lang.String, boolean)",
        "new": "method void io.smallrye.stork.test.TestServiceDiscovery::<init>(io.smallrye.stork.test.TestSd1Configuration, java.lang.String)",
        "justification": "Rename the generated configuration file to be <type>Configuration"
      },
      {
        "ignore": true,
        "code": "java.method.returnTypeChanged",
        "old": "method io.smallrye.stork.test.TestServiceDiscovery1ProviderConfiguration io.smallrye.stork.test.TestServiceDiscovery::getConfig()",
        "new": "method io.smallrye.stork.test.TestSd1Configuration io.smallrye.stork.test.TestServiceDiscovery::getConfig()",
        "justification": "Rename the generated configuration file to be <type>Configuration"
      },
      {
        "ignore": true,
        "code": "java.method.parameterTypeChanged",
        "old": "parameter io.smallrye.stork.api.ServiceDiscovery io.smallrye.stork.test.TestServiceDiscovery1Provider::createServiceDiscovery(===io.smallrye.stork.test.TestServiceDiscovery1ProviderConfiguration===, java.lang.String, io.smallrye.stork.api.config.ServiceConfig, io.smallrye.stork.spi.StorkInfrastructure)",
        "new": "parameter io.smallrye.stork.api.ServiceDiscovery io.smallrye.stork.test.TestServiceDiscovery1Provider::createServiceDiscovery(===io.smallrye.stork.test.TestSd1Configuration===, java.lang.String, io.smallrye.stork.api.config.ServiceConfig, io.smallrye.stork.spi.StorkInfrastructure)",
        "parameterIndex": "0",
        "justification": "Rename the generated configuration file to be <type>Configuration"
      },
      {
        "ignore": true,
        "code": "java.class.noLongerImplementsInterface",
        "old": "class io.smallrye.stork.test.TestServiceDiscovery1Provider",
        "new": "class io.smallrye.stork.test.TestServiceDiscovery1Provider",
        "interface": "io.smallrye.stork.spi.ServiceDiscoveryProvider<io.smallrye.stork.test.TestServiceDiscovery1ProviderConfiguration>",
        "justification": "Rename the generated configuration file to be <type>Configuration"
      },
      {
        "ignore": true,
        "code": "java.class.superTypeTypeParametersChanged",
        "old": "class io.smallrye.stork.test.TestServiceDiscovery1Provider",
        "new": "class io.smallrye.stork.test.TestServiceDiscovery1Provider",
        "oldSuperType": "io.smallrye.stork.spi.ServiceDiscoveryProvider<io.smallrye.stork.test.TestServiceDiscovery1ProviderConfiguration>",
        "newSuperType": "io.smallrye.stork.spi.ServiceDiscoveryProvider<io.smallrye.stork.test.TestSd1Configuration>",
        "justification": "Rename the generated configuration file to be <type>Configuration"
      },
      {
        "ignore": true,
        "code": "java.class.removed",
        "old": "class io.smallrye.stork.test.TestServiceDiscovery1ProviderConfiguration",
        "justification": "Rename the generated configuration file to be <type>Configuration"
      },
      {
        "ignore": true,
        "code": "java.method.parameterTypeChanged",
        "old": "parameter void io.smallrye.stork.test.TestServiceDiscovery2::<init>(===io.smallrye.stork.test.TestServiceDiscovery2ProviderConfiguration===, java.lang.String, boolean)",
        "new": "parameter void io.smallrye.stork.test.TestServiceDiscovery2::<init>(===io.smallrye.stork.test.TestSd2Configuration===, java.lang.String, boolean)",
        "parameterIndex": "0",
        "justification": "Rename the generated configuration file to be <type>Configuration"
      },
      {
        "ignore": true,
        "code": "java.method.returnTypeChanged",
        "old": "method io.smallrye.stork.test.TestServiceDiscovery2ProviderConfiguration io.smallrye.stork.test.TestServiceDiscovery2::getConfig()",
        "new": "method io.smallrye.stork.test.TestSd2Configuration io.smallrye.stork.test.TestServiceDiscovery2::getConfig()",
        "justification": "Rename the generated configuration file to be <type>Configuration"
      },
      {
        "ignore": true,
        "code": "java.method.parameterTypeChanged",
        "old": "parameter io.smallrye.stork.api.ServiceDiscovery io.smallrye.stork.test.TestServiceDiscovery2Provider::createServiceDiscovery(===io.smallrye.stork.test.TestServiceDiscovery2ProviderConfiguration===, java.lang.String, io.smallrye.stork.api.config.ServiceConfig, io.smallrye.stork.spi.StorkInfrastructure)",
        "new": "parameter io.smallrye.stork.api.ServiceDiscovery io.smallrye.stork.test.TestServiceDiscovery2Provider::createServiceDiscovery(===io.smallrye.stork.test.TestSd2Configuration===, java.lang.String, io.smallrye.stork.api.config.ServiceConfig, io.smallrye.stork.spi.StorkInfrastructure)",
        "parameterIndex": "0",
        "justification": "Rename the generated configuration file to be <type>Configuration"
      },
      {
        "ignore": true,
        "code": "java.class.noLongerImplementsInterface",
        "old": "class io.smallrye.stork.test.TestServiceDiscovery2Provider",
        "new": "class io.smallrye.stork.test.TestServiceDiscovery2Provider",
        "interface": "io.smallrye.stork.spi.ServiceDiscoveryProvider<io.smallrye.stork.test.TestServiceDiscovery2ProviderConfiguration>",
        "justification": "Rename the generated configuration file to be <type>Configuration"
      },
      {
        "ignore": true,
        "code": "java.class.superTypeTypeParametersChanged",
        "old": "class io.smallrye.stork.test.TestServiceDiscovery2Provider",
        "new": "class io.smallrye.stork.test.TestServiceDiscovery2Provider",
        "oldSuperType": "io.smallrye.stork.spi.ServiceDiscoveryProvider<io.smallrye.stork.test.TestServiceDiscovery2ProviderConfiguration>",
        "newSuperType": "io.smallrye.stork.spi.ServiceDiscoveryProvider<io.smallrye.stork.test.TestSd2Configuration>",
        "justification": "Rename the generated configuration file to be <type>Configuration"
      },
      {
        "ignore": true,
        "code": "java.class.removed",
        "old": "class io.smallrye.stork.test.TestServiceDiscovery2ProviderConfiguration",
        "justification": "Rename the generated configuration file to be <type>Configuration"
      },
      {
        "ignore": true,
        "code": "java.method.parameterTypeChanged",
        "old": "parameter void io.smallrye.stork.api.ServiceDiscovery::initialize(===java.util.Map<java.lang.String, io.smallrye.stork.api.Service>===) @ io.smallrye.stork.test.TestServiceDiscovery",
        "new": "parameter void io.smallrye.stork.api.ServiceDiscovery::initialize(===io.smallrye.stork.api.StorkServiceRegistry===) @ io.smallrye.stork.test.TestServiceDiscovery",
        "parameterIndex": "0",
        "justification": "The initialize method now receives the Stork instance"
      },
      {
        "ignore": true,
        "code": "java.method.parameterTypeChanged",
        "old": "parameter void io.smallrye.stork.api.ServiceDiscovery::initialize(===java.util.Map<java.lang.String, io.smallrye.stork.api.Service>===) @ io.smallrye.stork.test.TestServiceDiscovery2",
        "new": "parameter void io.smallrye.stork.api.ServiceDiscovery::initialize(===io.smallrye.stork.api.StorkServiceRegistry===) @ io.smallrye.stork.test.TestServiceDiscovery2",
        "parameterIndex": "0",
        "justification": "The initialize method now receives the Stork instance"
      }
    ]
  }
}, {
  "extension" : "revapi.reporter.json",
  "configuration" : {
    "minSeverity" : "POTENTIALLY_BREAKING",
    "minCriticality" : "documented",
    "output" : "target/compatibility.json",
    "indent" : true,
    "append" : false,
    "keepEmptyFile" : true
  }
}, {
  "extension" : "revapi.reporter.text",
  "configuration" : {
    "minSeverity" : "POTENTIALLY_BREAKING",
    "minCriticality" : "documented",
    "output" : "out"
  }
} ]