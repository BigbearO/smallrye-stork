[
  {
    "extension": "revapi.java",
    "id": "java",
    "configuration": {
      "missing-classes": {
        "behavior": "report",
        "ignoreMissingAnnotations": false
      }
    }
  },
  {
    "extension": "revapi.filter",
    "configuration": {
      "elements": {
        "include": [
          {
            "matcher": "java-package",
            "match": "/io\\.smallrye\\.stork\\.servicediscovery\\.composite(\\..*)?/"
          }
        ]
      }
    }
  },
  {
    "extension": "revapi.differences",
    "id": "breaking-changes",
    "configuration": {
      "criticality": "highlight",
      "minSeverity": "POTENTIALLY_BREAKING",
      "minCriticality": "documented",
      "differences": [
        {
          "ignore": true,
          "code": "java.method.parameterTypeChanged",
          "old": "parameter io.smallrye.stork.api.ServiceDiscovery io.smallrye.stork.servicediscovery.composite.CompositeServiceDiscoveryProvider::createServiceDiscovery(===io.smallrye.stork.servicediscovery.composite.CompositeServiceDiscoveryProviderConfiguration===, java.lang.String, io.smallrye.stork.api.config.ServiceConfig, io.smallrye.stork.spi.StorkInfrastructure)",
          "new": "parameter io.smallrye.stork.api.ServiceDiscovery io.smallrye.stork.servicediscovery.composite.CompositeServiceDiscoveryProvider::createServiceDiscovery(===io.smallrye.stork.servicediscovery.composite.CompositeConfiguration===, java.lang.String, io.smallrye.stork.api.config.ServiceConfig, io.smallrye.stork.spi.StorkInfrastructure)",
          "parameterIndex": "0",
          "justification": "The generated CompositeServiceDiscoveryProviderConfiguration has been renamed to CompositeConfiguration"
        },
        {
          "ignore": true,
          "code": "java.class.noLongerImplementsInterface",
          "old": "class io.smallrye.stork.servicediscovery.composite.CompositeServiceDiscoveryProvider",
          "new": "class io.smallrye.stork.servicediscovery.composite.CompositeServiceDiscoveryProvider",
          "interface": "io.smallrye.stork.spi.ServiceDiscoveryProvider<io.smallrye.stork.servicediscovery.composite.CompositeServiceDiscoveryProviderConfiguration>",
          "justification": "The generated CompositeServiceDiscoveryProviderConfiguration has been renamed to CompositeConfiguration"
        },
        {
          "ignore": true,
          "code": "java.class.superTypeTypeParametersChanged",
          "old": "class io.smallrye.stork.servicediscovery.composite.CompositeServiceDiscoveryProvider",
          "new": "class io.smallrye.stork.servicediscovery.composite.CompositeServiceDiscoveryProvider",
          "oldSuperType": "io.smallrye.stork.spi.ServiceDiscoveryProvider<io.smallrye.stork.servicediscovery.composite.CompositeServiceDiscoveryProviderConfiguration>",
          "newSuperType": "io.smallrye.stork.spi.ServiceDiscoveryProvider<io.smallrye.stork.servicediscovery.composite.CompositeConfiguration>",
          "justification": "The generated CompositeServiceDiscoveryProviderConfiguration has been renamed to CompositeConfiguration"
        },
        {
          "ignore": true,
          "code": "java.class.removed",
          "old": "class io.smallrye.stork.servicediscovery.composite.CompositeServiceDiscoveryProviderConfiguration",
          "justification": "The generated CompositeServiceDiscoveryProviderConfiguration has been renamed to CompositeConfiguration"
        },
        {
          "ignore": true,
          "code": "java.method.parameterTypeChanged",
          "old": "parameter void io.smallrye.stork.servicediscovery.composite.CompositeServiceDiscovery::initialize(===java.util.Map<java.lang.String, io.smallrye.stork.api.Service>===)",
          "new": "parameter void io.smallrye.stork.servicediscovery.composite.CompositeServiceDiscovery::initialize(===io.smallrye.stork.api.StorkServiceRegistry===)",
          "parameterIndex": "0",
          "justification": "The initialize method now receives the Stork instance"
        }
      ]
    }
  },
  {
    "extension": "revapi.reporter.json",
    "configuration": {
      "minSeverity": "POTENTIALLY_BREAKING",
      "minCriticality": "documented",
      "output": "target/compatibility.json",
      "indent": true,
      "append": false,
      "keepEmptyFile": true
    }
  },
  {
    "extension": "revapi.reporter.text",
    "configuration": {
      "minSeverity": "POTENTIALLY_BREAKING",
      "minCriticality": "documented",
      "output": "out"
    }
  }
]