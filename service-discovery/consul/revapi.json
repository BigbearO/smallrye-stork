[ {
  "extension" : "revapi.java",
  "id" : "java",
  "configuration" : {
    "missing-classes" : {
      "behavior" : "report",
      "ignoreMissingAnnotations" : false
    }
  }
}, {
  "extension" : "revapi.filter",
  "configuration" : {
    "elements" : {
      "include" : [ {
        "matcher" : "java-package",
        "match" : "/io\\.smallrye\\.stork\\.servicediscovery\\.consul(\\..*)?/"
      } ]
    }
  }
}, {
  "extension" : "revapi.differences",
  "id" : "breaking-changes",
  "configuration" : {
    "criticality" : "highlight",
    "minSeverity" : "POTENTIALLY_BREAKING",
    "minCriticality" : "documented",
    "differences" : [
      {
        "ignore": true,
        "code": "java.method.numberOfParametersChanged",
        "old": "method void io.smallrye.stork.servicediscovery.consul.ConsulServiceDiscovery::<init>(java.lang.String, io.smallrye.stork.servicediscovery.consul.ConsulServiceDiscoveryProviderConfiguration, io.vertx.core.Vertx, boolean)",
        "new": "method void io.smallrye.stork.servicediscovery.consul.ConsulServiceDiscovery::<init>(java.lang.String, io.smallrye.stork.servicediscovery.consul.ConsulServiceDiscoveryProviderConfiguration, io.vertx.core.Vertx)",
        "justification": "The 'secure' configuration is now passed as a part of the 'ConsulServiceDiscoveryProviderConfiguration'. Should not impact users."
      },
      {
        "ignore": true,
        "code": "java.annotation.attributeValueChanged",
        "old": "class io.smallrye.stork.servicediscovery.consul.ConsulServiceDiscoveryProvider",
        "new": "class io.smallrye.stork.servicediscovery.consul.ConsulServiceDiscoveryProvider",
        "annotationType": "io.smallrye.stork.api.config.ServiceDiscoveryAttributes",
        "attribute": "value",
        "oldValue": "{@io.smallrye.stork.api.config.ServiceDiscoveryAttribute(name = \"consul-host\", description = \"The Consul host.\", defaultValue = \"localhost\"), @io.smallrye.stork.api.config.ServiceDiscoveryAttribute(name = \"consul-port\", description = \"The Consul port.\", defaultValue = \"8500\"), @io.smallrye.stork.api.config.ServiceDiscoveryAttribute(name = \"use-health-checks\", description = \"Whether to use health check.\", defaultValue = \"true\"), @io.smallrye.stork.api.config.ServiceDiscoveryAttribute(name = \"application\", description = \"The application name; if not defined Stork service name will be used.\"), @io.smallrye.stork.api.config.ServiceDiscoveryAttribute(name = \"refresh-period\", description = \"Service discovery cache refresh period.\", defaultValue = \"5M\")}",
        "newValue": "{@io.smallrye.stork.api.config.ServiceDiscoveryAttribute(name = \"consul-host\", description = \"The Consul host.\", defaultValue = \"localhost\"), @io.smallrye.stork.api.config.ServiceDiscoveryAttribute(name = \"consul-port\", description = \"The Consul port.\", defaultValue = \"8500\"), @io.smallrye.stork.api.config.ServiceDiscoveryAttribute(name = \"use-health-checks\", description = \"Whether to use health check.\", defaultValue = \"true\"), @io.smallrye.stork.api.config.ServiceDiscoveryAttribute(name = \"application\", description = \"The application name; if not defined Stork service name will be used.\"), @io.smallrye.stork.api.config.ServiceDiscoveryAttribute(name = \"refresh-period\", description = \"Service discovery cache refresh period.\", defaultValue = \"5M\"), @io.smallrye.stork.api.config.ServiceDiscoveryAttribute(name = \"secure\", description = \"whether the connection with the service should be encrypted with TLS.\")}",
        "justification": "Added the 'secure' attribute. Should not impact users."
      }
    ]
  }
}, {
  "extension" : "revapi.reporter.json",
  "configuration" : {
    "minSeverity" : "POTENTIALLY_BREAKING",
    "minCriticality" : "documented",
    "output" : "target/compatibility.json",
    "indent" : true,
    "append" : false,
    "keepEmptyFile" : true
  }
}, {
  "extension" : "revapi.reporter.text",
  "configuration" : {
    "minSeverity" : "POTENTIALLY_BREAKING",
    "minCriticality" : "documented",
    "output" : "out"
  }
} ]