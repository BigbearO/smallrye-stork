[ {
  "extension" : "revapi.java",
  "id" : "java",
  "configuration" : {
    "missing-classes" : {
      "behavior" : "report",
      "ignoreMissingAnnotations" : false
    }
  }
}, {
  "extension" : "revapi.filter",
  "configuration" : {
    "elements" : {
      "include" : [ {
        "matcher" : "java-package",
        "match" : "/io\\.smallrye\\.stork\\.api(\\..*)?/"
      }, {
        "matcher" : "java-package",
        "match" : "/io\\.smallrye\\.stork\\.api(\\..*)?/"
      } ]
    }
  }
}, {
  "extension" : "revapi.differences",
  "id" : "breaking-changes",
  "configuration" : {
    "criticality" : "highlight",
    "minSeverity" : "POTENTIALLY_BREAKING",
    "minCriticality" : "documented",
    "differences" : [{
      "ignore": true,
      "code": "java.method.returnTypeTypeParametersChanged",
      "old": "method io.smallrye.stork.api.Metadata<? extends io.smallrye.stork.api.MetadataKey> io.smallrye.stork.api.Metadata<T extends java.lang.Enum<T>>::empty()",
      "new": "method <T extends java.lang.Enum<T> & io.smallrye.stork.api.MetadataKey> io.smallrye.stork.api.Metadata<T> io.smallrye.stork.api.Metadata<T extends java.lang.Enum<T> & io.smallrye.stork.api.MetadataKey>::empty()",
      "justification": "Refactored according with the actual type parameter change."

    },
      {
        "ignore": true,
        "code": "java.generics.elementNowParameterized",
        "old": "method io.smallrye.stork.api.Metadata<? extends io.smallrye.stork.api.MetadataKey> io.smallrye.stork.api.Metadata<T extends java.lang.Enum<T>>::empty()",
        "new": "method <T extends java.lang.Enum<T> & io.smallrye.stork.api.MetadataKey> io.smallrye.stork.api.Metadata<T> io.smallrye.stork.api.Metadata<T extends java.lang.Enum<T> & io.smallrye.stork.api.MetadataKey>::empty()",
        "justification": "Using a generic method that operates in a parametrized type."

      },
      {
        "ignore": true,
        "code": "java.generics.formalTypeParameterAdded",
        "old": "method io.smallrye.stork.api.Metadata<? extends io.smallrye.stork.api.MetadataKey> io.smallrye.stork.api.Metadata<T extends java.lang.Enum<T>>::empty()",
        "new": "method <T extends java.lang.Enum<T> & io.smallrye.stork.api.MetadataKey> io.smallrye.stork.api.Metadata<T> io.smallrye.stork.api.Metadata<T extends java.lang.Enum<T> & io.smallrye.stork.api.MetadataKey>::empty()",
        "typeParameter": "T extends java.lang.Enum<T> & io.smallrye.stork.api.MetadataKey",
        "justification": "Add a type parameter representing the element type according with the actual type parameter of the class."

      },
      {
        "ignore": true,
        "code": "java.method.returnTypeTypeParametersChanged",
        "old": "method java.util.EnumMap<T, java.lang.Object> io.smallrye.stork.api.Metadata<T extends java.lang.Enum<T>>::getMetadata()",
        "new": "method java.util.EnumMap<T, java.lang.Object> io.smallrye.stork.api.Metadata<T extends java.lang.Enum<T> & io.smallrye.stork.api.MetadataKey>::getMetadata()",
        "justification": "Refactored according with the actual type parameter change."

      },
      {
        "ignore": true,
        "code": "java.method.parameterTypeParameterChanged",
        "old": "parameter io.smallrye.stork.api.Metadata<T> io.smallrye.stork.api.Metadata<T extends java.lang.Enum<T>>::with(===T===, java.lang.Object)",
        "new": "parameter io.smallrye.stork.api.Metadata<T> io.smallrye.stork.api.Metadata<T extends java.lang.Enum<T> & io.smallrye.stork.api.MetadataKey>::with(===T===, java.lang.Object)",
        "parameterIndex": "0",
        "justification": "Refactored according with the actual type parameter change."

      },
      {
        "ignore": true,
        "code": "java.method.returnTypeTypeParametersChanged",
        "old": "method io.smallrye.stork.api.Metadata<T> io.smallrye.stork.api.Metadata<T extends java.lang.Enum<T>>::with(T, java.lang.Object)",
        "new": "method io.smallrye.stork.api.Metadata<T> io.smallrye.stork.api.Metadata<T extends java.lang.Enum<T> & io.smallrye.stork.api.MetadataKey>::with(T, java.lang.Object)",
        "justification": "Refactored according with the actual type parameter change."

      },
      {
        "ignore": true,
        "code": "java.generics.formalTypeParameterChanged",
        "old": "class io.smallrye.stork.api.Metadata<T extends java.lang.Enum<T>>",
        "new": "class io.smallrye.stork.api.Metadata<T extends java.lang.Enum<T> & io.smallrye.stork.api.MetadataKey>",
        "justification": "Adjust the formal type parameter and remove bounded wildcard types used."

      },
      {
        "ignore": true,
        "code": "java.method.returnTypeChanged",
        "old": "method io.smallrye.stork.api.config.LoadBalancerConfig io.smallrye.stork.api.ServiceDefinition::getLoadBalancer()",
        "new": "method io.smallrye.stork.api.config.ConfigWithType io.smallrye.stork.api.ServiceDefinition::getLoadBalancer()",
        "justification": "Refactored according with the renaming of the returned type."
      },
      {
        "ignore": true,
        "code": "java.method.returnTypeChanged",
        "old": "method io.smallrye.stork.api.config.ServiceDiscoveryConfig io.smallrye.stork.api.ServiceDefinition::getServiceDiscovery()",
        "new": "method io.smallrye.stork.api.config.ConfigWithType io.smallrye.stork.api.ServiceDefinition::getServiceDiscovery()",
        "justification": "Refactored according with the renaming of the returned type."
      },
      {
        "ignore": true,
        "code": "java.method.parameterTypeChanged",
        "old": "parameter io.smallrye.stork.api.ServiceDefinition io.smallrye.stork.api.ServiceDefinition::of(===io.smallrye.stork.api.config.ServiceDiscoveryConfig===)",
        "new": "parameter io.smallrye.stork.api.ServiceDefinition io.smallrye.stork.api.ServiceDefinition::of(===io.smallrye.stork.api.config.ConfigWithType===)",
        "parameterIndex": "0",
        "justification": "Refactored according with the renaming of the parameter type."

      },
      {
        "ignore": true,
        "code": "java.method.parameterTypeChanged",
        "old": "parameter io.smallrye.stork.api.ServiceDefinition io.smallrye.stork.api.ServiceDefinition::of(===io.smallrye.stork.api.config.ServiceDiscoveryConfig===, io.smallrye.stork.api.config.LoadBalancerConfig)",
        "new": "parameter io.smallrye.stork.api.ServiceDefinition io.smallrye.stork.api.ServiceDefinition::of(===io.smallrye.stork.api.config.ConfigWithType===, io.smallrye.stork.api.config.ConfigWithType)",
        "parameterIndex": "0",
        "justification": "Refactored according with the renaming of the parameter type."

      },
      {
        "ignore": true,
        "code": "java.method.parameterTypeChanged",
        "old": "parameter io.smallrye.stork.api.ServiceDefinition io.smallrye.stork.api.ServiceDefinition::of(io.smallrye.stork.api.config.ServiceDiscoveryConfig, ===io.smallrye.stork.api.config.LoadBalancerConfig===)",
        "new": "parameter io.smallrye.stork.api.ServiceDefinition io.smallrye.stork.api.ServiceDefinition::of(io.smallrye.stork.api.config.ConfigWithType, ===io.smallrye.stork.api.config.ConfigWithType===)",
        "parameterIndex": "1",
        "justification": "Refactored according with the renaming of the returned type."

      },
      {
        "ignore": true,
        "code": "java.class.removed",
        "old": "interface io.smallrye.stork.api.config.LoadBalancerConfig",
        "justification": "Replaced by io.smallrye.stork.api.config.ConfigWithType."

      },
      {
        "ignore": true,
        "code": "java.method.returnTypeChanged",
        "old": "method io.smallrye.stork.api.config.LoadBalancerConfig io.smallrye.stork.api.config.ServiceConfig::loadBalancer()",
        "new": "method io.smallrye.stork.api.config.ConfigWithType io.smallrye.stork.api.config.ServiceConfig::loadBalancer()",
        "justification": "Refactored according with the renaming of the returned type."
      },
      {
        "ignore": true,
        "code": "java.method.returnTypeChanged",
        "old": "method io.smallrye.stork.api.config.ServiceDiscoveryConfig io.smallrye.stork.api.config.ServiceConfig::serviceDiscovery()",
        "new": "method io.smallrye.stork.api.config.ConfigWithType io.smallrye.stork.api.config.ServiceConfig::serviceDiscovery()",
        "justification": "Refactored according with the renaming of the returned type."
      },
      {
        "ignore": true,
        "code": "java.class.removed",
        "old": "interface io.smallrye.stork.api.config.ServiceDiscoveryConfig",
        "justification": "Replaced by io.smallrye.stork.api.config.ConfigWithType."
      }
        ]
  }
}, {
  "extension" : "revapi.reporter.json",
  "configuration" : {
    "minSeverity" : "POTENTIALLY_BREAKING",
    "minCriticality" : "documented",
    "output" : "target/compatibility.json",
    "indent" : true,
    "append" : false,
    "keepEmptyFile" : true
  }
}, {
  "extension" : "revapi.reporter.text",
  "configuration" : {
    "minSeverity" : "POTENTIALLY_BREAKING",
    "minCriticality" : "documented",
    "output" : "out"
  }
} ]